name: Deploy to EC2

on:
  push:
    branches: [ main, master ]
  pull_request:
    types: [closed]
    branches: [ main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ec2-18-118-115-30.us-east-2.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          set -e  # Exit on any error
          
          # Variables
          APP_DIR="/home/ubuntu/gestor-identidades"
          WILDFLY_HOME="/opt/wildfly"
          WAR_NAME="GestorIdentidades.war"
          
          # Ensure app directory exists
          mkdir -p $APP_DIR
          
          # Clone or update repository
          if [ ! -d "$APP_DIR/.git" ]; then
            echo "🔄 Cloning repository..."
            git clone https://github.com/JuampaRomero/PracticoJavaEE.git $APP_DIR
            cd $APP_DIR
          else
            echo "🔄 Pulling latest changes..."
            cd $APP_DIR
            git fetch origin
            git reset --hard origin/${{ github.ref_name }}
          fi
          
          echo "🛠️ Building application with Maven..."
          mvn clean package
          if [ $? -ne 0 ]; then
            echo "❌ Maven build failed!"
            exit 1
          fi
          
          echo "🚀 Deploying to WildFly..."
          # Stop WildFly
          sudo systemctl stop wildfly || true
          
          # Remove old deployment
          sudo rm -f $WILDFLY_HOME/standalone/deployments/$WAR_NAME*
          
          # Copy new WAR file
          sudo cp target/$WAR_NAME $WILDFLY_HOME/standalone/deployments/
          
          # Set correct permissions
          sudo chown wildfly:wildfly $WILDFLY_HOME/standalone/deployments/$WAR_NAME
          
          # Start WildFly
          sudo systemctl start wildfly
          
          # Wait for deployment
          echo "⏳ Waiting for deployment..."
          sleep 15
          
          # Check deployment status
          if sudo ls $WILDFLY_HOME/standalone/deployments/$WAR_NAME.deployed 2>/dev/null; then
            echo "✅ Deployment completed successfully!"
          elif sudo ls $WILDFLY_HOME/standalone/deployments/$WAR_NAME.failed 2>/dev/null; then
            echo "❌ Deployment failed!"
            sudo cat $WILDFLY_HOME/standalone/deployments/$WAR_NAME.failed
            exit 1
          else
            echo "⚠️ Deployment status unknown"
          fi
          
          echo "📊 WildFly status:"
          sudo systemctl status wildfly --no-pager -l
          
          echo "📝 Recent logs:"
          sudo tail -n 50 $WILDFLY_HOME/standalone/log/server.log || true
